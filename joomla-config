#!/usr/bin/env bash

set -euo pipefail
shopt -s lastpipe nullglob dotglob

declare -r app_name="${0##*/}"

main() {
    declare opt_file
    declare opt_raw=0
    declare opt_db=0
    declare opt_fields=""

    while [[ $# -gt 0 ]]; do
        case "${1:-}" in
        --)
            shift
            break
            ;;
        -f | --file)
            opt_file="${2}"
            shift 2
            ;;
        --raw)
            opt_raw=1
            shift
            ;;
        --db)
            opt_db=1
            shift
            ;;
        --fields)
            opt_fields="${2}"
            shift 2
            ;;
        -h | --help)
            help
            ;;
        -*)
            unknown_option "${1}"
            ;;
        *)
            break
            ;;
        esac
    done

    declare -r configuration="$(realpath -L "${opt_file:-"${PWD}/configuration.php"}")"
    if [[ ! -f "${configuration}" ]]; then
        fail "configuration file not found: ${configuration}"
    fi

    case "$#" in
    0)
        config_list
        ;;
    1)
        config_get "$@"
        ;;
    2)
        config_set "$@"
        ;;
    *)
        fail 'too many arguments'
        ;;
    esac
}

config_get() {
    declare -r name="${1}"

    declare -A config=()
    config_load

    if ! [[ "${config[${name}]+_}" ]]; then
        fail "'${name}' not found"
    fi

    if [[ "${opt_raw}" -eq 1 ]]; then
        echo -n "${config[${name}]}"
    else
        unquote "${config[${name}]}"
    fi
    echo
}

config_set() {
    declare -r name="${1}"
    declare -r value="${2}"

    config_get "${name}" >/dev/null

    if [[ "${opt_raw}" -eq 1 ]]; then
        sed -Ei -e "s|(\\\$${name}\s*=\s*).+(\s*;)|\1${value}\2|" "${configuration}"
    else
        sed -Ei -e "s|(\\\$${name}\s*=\s*'?)[^']*('?\s*;)|\1'${value}'\2|" "${configuration}"
    fi
}

config_list() {
    declare key

    declare -A config=()
    config_load

    declare -ra db_options=(
        db dbtype dbprefix host user password
        dbencryption dbsslverifyservercert dbsslkey dbsslcert dbsslca dbsslcipher
    )

    # Convert comma-separated fields to array if specified
    declare -a fields=()
    if [[ -n "${opt_fields}" ]]; then
        IFS=',' read -ra fields <<< "${opt_fields}"
    fi

    for key in "${!config[@]}"; do
        # Skip if --db option is used and key is not in db_options
        if [[ "${opt_db}" -eq 1 ]] && ! [[ " ${db_options[@]} " =~ " ${key} " ]]; then
            continue
        fi

        # Skip if --fields option is used and key is not in specified fields
        if [[ -n "${opt_fields}" ]] && ! [[ " ${fields[@]} " =~ " ${key} " ]]; then
            continue
        fi

        if [[ "${opt_raw}" -eq 1 ]]; then
            echo "${key}: ${config[${key}]}"
        else
            echo "${key}: $(unquote "${config[${key}]}")"
        fi
    done | column -t -s : -l 2
}

config_load() {
    declare key
    declare value

    sed -En -e "s|.*\\\$(\w+)\s*=\s*(.*)\s*;.*|\1: \2|p" "${configuration}" |
        while IFS=': ' read -r key value; do
            config["${key}"]="${value}"
        done
}

unquote() {
    if is_quoted "${1}"; then
        echo -n "${1:1:-1}"
    else
        echo -n "${1}"
    fi
}

is_quoted() {
    [[ "${1:0:1}" == '"' && "${1: -1}" == '"' ]] || [[ "${1:0:1}" == "'" && "${1: -1}" == "'" ]]
}

help() {
    echo -n "Manage Joomla! configuration values. (c) PopArtDesign, https://popartdesign.ru

Usage: ${app_name} [--raw] [--db] [--fields <fields>] [-f|--file <file>] [<name>] [<value>]

Arguments:
  <name>             Optional. The name of a configuration variable.
                     E.g.: 'db', 'user', 'debug'.
  <value>            Optional. The value of a configuration variable.
                     E.g.: 1, true, 'pAsSwOrD'.

Options:
  --raw              Use values without quoting/unquoting. When setting values,
                     do not automatically quote the value.
  --db               Show only database-related configuration values.
  --fields <fields>  Show only specified configuration fields (comma-separated).
                     E.g.: --fields db,user,password
  -f, --file <file>  Specify configuration file (default: ./configuration.php).
  -h, --help         Show this help message and exit.

Examples:
  ${app_name}                                # List all configuration values
  ${app_name} --raw                          # List all configuration values without unquoting
  ${app_name} --db                           # List only database-related configuration values
  ${app_name} --fields db,user,password      # List only specified fields
  ${app_name} host                           # Get the database host value
  ${app_name} --raw host                     # Get the database host value without unquoting
  ${app_name} host localhost                 # Set the database host to localhost
  ${app_name} -f /path/to/configuration.php  # Use a specific configuration file
"
    exit 0
}

unknown_option() {
    fail "unknown option '${1}'
Try '${app_name} --help' for more information."
}

value_required() {
    fail "value required '${1}'
Try '${app_name} --help' for more information."
}

fail() {
    error "${1}"
    exit "${2:-1}"
}

error() {
    echo "${app_name}: ${1}" >&2
}

main "$@"
